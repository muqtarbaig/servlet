import java.lang.invoke.LambdaForm.Compiled;

apply plugin : 'java'
apply plugin : 'war'
apply plugin : 'eclipse-wtp'
apply plugin : 'eclipse'
apply plugin: 'com.bmuschko.tomcat'

buildscript {
	repositories {
		//jcenter()
		mavenCentral()
	}

	dependencies {
		classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.2'
	}
}

ext {
	log4j2Version = "2.0.2"
}

repositories{
	mavenCentral()
	mavenLocal()
}

//configurations{
//	all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
//	all*.exclude group: "log4j", module: "log4j"
//  }
  

dependencies{
	//servlet api
	providedCompile "javax.servlet:javax.servlet-api:3.1.0"
	//spring mvc
	compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
	// Rest JSON mapper
	compile "com.fasterxml.jackson.core:jackson-databind:2.4.+"
	//spring security
	compile "org.springframework.security:spring-security-web:+"
	compile "org.springframework.security:spring-security-config:+"
	compile 'jstl:jstl:1.2'
	// spring orm
	compile 'org.springframework:spring-orm:4.1.6.RELEASE'
	// multipart upload 
	compile 'commons-fileupload:commons-fileupload:1.3.1'
	//valiation
	compile "javax.validation:validation-api:1.1.0.Final"
	
	
	//slf4j
	//compile 'org.slf4j:slf4j-simple:1.7.12'
	
	//log4j2 dependencies
	compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version:"$log4j2Version"
	compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version:"$log4j2Version"
	compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version:"$log4j2Version"
	compile group: 'org.apache.logging.log4j', name: 'log4j-web', version:"$log4j2Version"
	
	//lmax log4j
	compile 'com.lmax:disruptor:3.3.2'
	//log4j 2
	//compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.4.1'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.4.1'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.4.1'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.4.1'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.4.1'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.4.1'
	
	//sound api
	compile 'com.googlecode.soundlibs:tritonus-share:0.3.7-2'
	compile 'javax.media:jmf:2.1.1e'
	compile fileTree(dir: 'lib', include: '*.jar')
	
	
	//joda
	compile "joda-time:joda-time:2.7"
	
	//hibernate memcache
	//compile 'com.googlecode:hibernate-memcached:1.3'
	// hibernate
	compile 'org.hibernate:hibernate-core:4+'
	//dhcp
	compile 'commons-dbcp:commons-dbcp:1.4'
	//h2
	compile 'com.h2database:h2:1.4.190'
	
	def tomcatVersion = '7.0.59'
	tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
		   "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
		   "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

tomcat {
	httpPort = 9090
	httpsPort = 9091
	enableSSL = true
	contextPath = 'sampleserv'
	}

task createDirs << {
	
	sourceSets.all { set ->
		set.allSource.srcDirs.each{
			it.mkdirs()
		}
	}
	
}



/*task copyWar(dependsOn : war,type: Copy){
	from 'build/libs/'
	into 'D:/tools/apache-tomcat-7.0.59/webapps'
}

task deployWar(dependsOn : copyWar, type: Exec)  {
	workingDir 'D:/tools/apache-tomcat-7.0.59/bin'
	//def path = "$buildDir/libs/servlet.war";
	//commandLine "cmd", "/c", "copy $buildDir/libs/servlet.war ..\\webapps"
	commandLine 'cmd', '/c', "startup.bat"
}
deployWar <<{
	println "Deployed "
}*/
